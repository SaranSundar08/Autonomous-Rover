<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot name="avery">

<!-- base link -->
  <link name="base_link">
    <inertial>
      <origin xyz="0.0140254491237372 -1.46359095861988E-17 -0.0396282950760193" rpy="0 0 0" />
      <mass value="3.21358469498074" />
      <inertia
        ixx="0.00758440507612283"
        ixy="1.02042408971249E-18"
        ixz="-0.000180016994765156"
        iyy="0.0206302650698968"
        iyz="3.18839490905985E-19"
        izz="0.0246518263156418" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/base_link.STL" />
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>

<!-- left wheel -->
  <link name="left_wheel">
    <inertial>
      <origin xyz="0.000105404053833622 0.00011619663060234 0.00305906530178883" rpy="0 0 0" />
      <mass value="0.068110442622763" />
      <inertia
        ixx="3.65452160350226E-05"
        ixy="-6.27727974151302E-11"
        ixz="-4.98297806278313E-08"
        iyy="3.65452037770999E-05"
        iyz="-5.49319727469599E-08"
        izz="5.17469620663014E-05" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/left_wheel.STL" />
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/left_wheel.STL" />
      </geometry>
    </collision>
  </link>

  <joint name="left_wheel_joint" type="continuous">
    <origin xyz="0.074127055039548 0.11 -0.055" rpy="-1.5707963267949 0 0" />
    <parent link="base_link" />
    <child link="left_wheel" />
    <axis xyz="0 0 1" />
  </joint>

<!-- right wheel -->
  <link name="right_wheel">
    <inertial>
      <origin xyz="-2.77555756156289E-17 0.000156881074473304 -0.00305906530178883" rpy="0 0 0" />
      <mass value="0.068110442622763" />
      <inertia
        ixx="3.65452729773563E-05"
        ixy="-5.19010375435231E-21"
        ixz="-8.41883880005687E-21"
        iyy="3.65451468347662E-05"
        iyz="7.41655490594582E-08"
        izz="5.17469620663014E-05" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/right_wheel.STL" />
      </geometry>
      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/right_wheel.STL" />
      </geometry>
    </collision>
  </link>

  <joint name="right_wheel_joint" type="continuous">
    <origin xyz="0.074127055039548 -0.11 -0.055" rpy="-1.5707963267949 0 0" />
    <parent link="base_link" />
    <child link="right_wheel" />
    <axis xyz="0 0 1" />
  </joint>

<!-- lidar -->
  <link name="lidar">
    <inertial>
      <origin xyz="0 6.85574692434294E-18 -0.0200543291401752" rpy="0 0 0" />
      <mass value="0.153506594634807" />
      <inertia
        ixx="6.7252404140585E-05"
        ixy="1.93350358993692E-38"
        ixz="-1.91330721234352E-37"
        iyy="6.7252404140585E-05"
        iyz="-2.52549223085009E-23"
        izz="9.37781843909317E-05" />
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/lidar.STL" />
      </geometry>

      <material name="">
        <color rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="package://avery/meshes/lidar.STL" />
      </geometry>
    </collision>
  </link>

  <joint name="lidar_joint" type="fixed">
    <origin xyz="0.101236810502729 0 0.05" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="lidar" />
    <axis xyz="0 0 0" />
  </joint>

<!-- gazebo properties -->
  <gazebo reference="base_link">
    <material>$(body_color)</material>
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="left_wheel">
    <material>$(body_color)</material>
    <mu1>1500</mu1>
    <mu2>1500</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <gazebo reference="right_wheel">
    <material>$(body_color)</material>
    <mu1>1500</mu1>
    <mu2>1500</mu2>
    <selfCollide>true</selfCollide>
  </gazebo>

  <!-- LIDAR hokuyo -->
  <gazebo reference="lidar">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo>
  
<!-- differential drive for the robot  -->
  <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <!-- Plugin update rate in Hz -->
    <updateRate>100</updateRate>

    <!-- Name of left joint, defaults to `left_joint` -->
    <leftJoint>left_wheel_joint</leftJoint>

    <!-- Name of right joint, defaults to `right_joint` -->
    <rightJoint>right_wheel_joint</rightJoint>

    <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
    <wheelSeparation>0.5380</wheelSeparation>

    <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
    <wheelDiameter>0.2410</wheelDiameter>

    <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
    <wheelAcceleration>1.0</wheelAcceleration>

    <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
    <wheelTorque>20</wheelTorque>

    <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
    <commandTopic>cmd_vel</commandTopic>

    <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
    <odometryTopic>odom</odometryTopic>

    <!-- Odometry frame, defaults to `odom` -->
    <odometryFrame>odom</odometryFrame>

    <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
    <robotBaseFrame>base_link</robotBaseFrame>

    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>

    <!-- Set to true to publish transforms for the wheel links, defaults to false -->
    <publishWheelTF>true</publishWheelTF>

    <!-- Set to true to publish transforms for the odometry, defaults to true -->
    <publishOdom>true</publishOdom>

    <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
    <publishWheelJointState>true</publishWheelJointState>

    <!-- Set to true to swap right and left wheels, defaults to true -->
    <legacyMode>false</legacyMode>
  </plugin>
</gazebo>
</robot>